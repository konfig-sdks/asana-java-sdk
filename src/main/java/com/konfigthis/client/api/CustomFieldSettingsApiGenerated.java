/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiCallback;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiResponse;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.Pair;
import com.konfigthis.client.ProgressRequestBody;
import com.konfigthis.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.konfigthis.client.model.CustomFieldSettingsGetPortfolioCustomFieldSettingsResponse;
import com.konfigthis.client.model.CustomFieldSettingsGetProjectCustomFieldSettingsResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.ws.rs.core.GenericType;

public class CustomFieldSettingsApiGenerated {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public CustomFieldSettingsApiGenerated() throws IllegalArgumentException {
        this(Configuration.getDefaultApiClient());
    }

    public CustomFieldSettingsApiGenerated(ApiClient apiClient) throws IllegalArgumentException {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    private okhttp3.Call getPortfolioCustomFieldSettingsCall(String portfolioGid, Boolean optPretty, Integer limit, String offset, List<String> optFields, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/portfolios/{portfolio_gid}/custom_field_settings"
            .replace("{" + "portfolio_gid" + "}", localVarApiClient.escapeString(portfolioGid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (optPretty != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("opt_pretty", optPretty));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (optFields != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "opt_fields", optFields));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2", "personalAccessToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getPortfolioCustomFieldSettingsValidateBeforeCall(String portfolioGid, Boolean optPretty, Integer limit, String offset, List<String> optFields, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'portfolioGid' is set
        if (portfolioGid == null) {
            throw new ApiException("Missing the required parameter 'portfolioGid' when calling getPortfolioCustomFieldSettings(Async)");
        }

        return getPortfolioCustomFieldSettingsCall(portfolioGid, optPretty, limit, offset, optFields, _callback);

    }


    private ApiResponse<CustomFieldSettingsGetPortfolioCustomFieldSettingsResponse> getPortfolioCustomFieldSettingsWithHttpInfo(String portfolioGid, Boolean optPretty, Integer limit, String offset, List<String> optFields) throws ApiException {
        okhttp3.Call localVarCall = getPortfolioCustomFieldSettingsValidateBeforeCall(portfolioGid, optPretty, limit, offset, optFields, null);
        Type localVarReturnType = new TypeToken<CustomFieldSettingsGetPortfolioCustomFieldSettingsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getPortfolioCustomFieldSettingsAsync(String portfolioGid, Boolean optPretty, Integer limit, String offset, List<String> optFields, final ApiCallback<CustomFieldSettingsGetPortfolioCustomFieldSettingsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getPortfolioCustomFieldSettingsValidateBeforeCall(portfolioGid, optPretty, limit, offset, optFields, _callback);
        Type localVarReturnType = new TypeToken<CustomFieldSettingsGetPortfolioCustomFieldSettingsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetPortfolioCustomFieldSettingsRequestBuilder {
        private final String portfolioGid;
        private Boolean optPretty;
        private Integer limit;
        private String offset;
        private List<String> optFields;

        private GetPortfolioCustomFieldSettingsRequestBuilder(String portfolioGid) {
            this.portfolioGid = portfolioGid;
        }

        /**
         * Set optPretty
         * @param optPretty Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging. (optional)
         * @return GetPortfolioCustomFieldSettingsRequestBuilder
         */
        public GetPortfolioCustomFieldSettingsRequestBuilder optPretty(Boolean optPretty) {
            this.optPretty = optPretty;
            return this;
        }
        
        /**
         * Set limit
         * @param limit Results per page. The number of objects to return per page. The value must be between 1 and 100. (optional)
         * @return GetPortfolioCustomFieldSettingsRequestBuilder
         */
        public GetPortfolioCustomFieldSettingsRequestBuilder limit(Integer limit) {
            this.limit = limit;
            return this;
        }
        
        /**
         * Set offset
         * @param offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#39;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#39; (optional)
         * @return GetPortfolioCustomFieldSettingsRequestBuilder
         */
        public GetPortfolioCustomFieldSettingsRequestBuilder offset(String offset) {
            this.offset = offset;
            return this;
        }
        
        /**
         * Set optFields
         * @param optFields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include. (optional)
         * @return GetPortfolioCustomFieldSettingsRequestBuilder
         */
        public GetPortfolioCustomFieldSettingsRequestBuilder optFields(List<String> optFields) {
            this.optFields = optFields;
            return this;
        }
        
        /**
         * Build call for getPortfolioCustomFieldSettings
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successfully retrieved custom field settings objects for a portfolio. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getPortfolioCustomFieldSettingsCall(portfolioGid, optPretty, limit, offset, optFields, _callback);
        }


        /**
         * Execute getPortfolioCustomFieldSettings request
         * @return CustomFieldSettingsGetPortfolioCustomFieldSettingsResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successfully retrieved custom field settings objects for a portfolio. </td><td>  -  </td></tr>
         </table>
         */
        public CustomFieldSettingsGetPortfolioCustomFieldSettingsResponse execute() throws ApiException {
            ApiResponse<CustomFieldSettingsGetPortfolioCustomFieldSettingsResponse> localVarResp = getPortfolioCustomFieldSettingsWithHttpInfo(portfolioGid, optPretty, limit, offset, optFields);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getPortfolioCustomFieldSettings request with HTTP info returned
         * @return ApiResponse&lt;CustomFieldSettingsGetPortfolioCustomFieldSettingsResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successfully retrieved custom field settings objects for a portfolio. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<CustomFieldSettingsGetPortfolioCustomFieldSettingsResponse> executeWithHttpInfo() throws ApiException {
            return getPortfolioCustomFieldSettingsWithHttpInfo(portfolioGid, optPretty, limit, offset, optFields);
        }

        /**
         * Execute getPortfolioCustomFieldSettings request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successfully retrieved custom field settings objects for a portfolio. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<CustomFieldSettingsGetPortfolioCustomFieldSettingsResponse> _callback) throws ApiException {
            return getPortfolioCustomFieldSettingsAsync(portfolioGid, optPretty, limit, offset, optFields, _callback);
        }
    }

    /**
     * Get a portfolio&#39;s custom fields
     * Returns a list of all of the custom fields settings on a portfolio, in compact form.
     * @param portfolioGid Globally unique identifier for the portfolio. (required)
     * @return GetPortfolioCustomFieldSettingsRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved custom field settings objects for a portfolio. </td><td>  -  </td></tr>
     </table>
     */
    public GetPortfolioCustomFieldSettingsRequestBuilder getPortfolioCustomFieldSettings(String portfolioGid) throws IllegalArgumentException {
        if (portfolioGid == null) throw new IllegalArgumentException("\"portfolioGid\" is required but got null");
            

        return new GetPortfolioCustomFieldSettingsRequestBuilder(portfolioGid);
    }
    private okhttp3.Call getProjectCustomFieldSettingsCall(String projectGid, Boolean optPretty, Integer limit, String offset, List<String> optFields, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/projects/{project_gid}/custom_field_settings"
            .replace("{" + "project_gid" + "}", localVarApiClient.escapeString(projectGid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (optPretty != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("opt_pretty", optPretty));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (optFields != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "opt_fields", optFields));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2", "personalAccessToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getProjectCustomFieldSettingsValidateBeforeCall(String projectGid, Boolean optPretty, Integer limit, String offset, List<String> optFields, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'projectGid' is set
        if (projectGid == null) {
            throw new ApiException("Missing the required parameter 'projectGid' when calling getProjectCustomFieldSettings(Async)");
        }

        return getProjectCustomFieldSettingsCall(projectGid, optPretty, limit, offset, optFields, _callback);

    }


    private ApiResponse<CustomFieldSettingsGetProjectCustomFieldSettingsResponse> getProjectCustomFieldSettingsWithHttpInfo(String projectGid, Boolean optPretty, Integer limit, String offset, List<String> optFields) throws ApiException {
        okhttp3.Call localVarCall = getProjectCustomFieldSettingsValidateBeforeCall(projectGid, optPretty, limit, offset, optFields, null);
        Type localVarReturnType = new TypeToken<CustomFieldSettingsGetProjectCustomFieldSettingsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getProjectCustomFieldSettingsAsync(String projectGid, Boolean optPretty, Integer limit, String offset, List<String> optFields, final ApiCallback<CustomFieldSettingsGetProjectCustomFieldSettingsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getProjectCustomFieldSettingsValidateBeforeCall(projectGid, optPretty, limit, offset, optFields, _callback);
        Type localVarReturnType = new TypeToken<CustomFieldSettingsGetProjectCustomFieldSettingsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetProjectCustomFieldSettingsRequestBuilder {
        private final String projectGid;
        private Boolean optPretty;
        private Integer limit;
        private String offset;
        private List<String> optFields;

        private GetProjectCustomFieldSettingsRequestBuilder(String projectGid) {
            this.projectGid = projectGid;
        }

        /**
         * Set optPretty
         * @param optPretty Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging. (optional)
         * @return GetProjectCustomFieldSettingsRequestBuilder
         */
        public GetProjectCustomFieldSettingsRequestBuilder optPretty(Boolean optPretty) {
            this.optPretty = optPretty;
            return this;
        }
        
        /**
         * Set limit
         * @param limit Results per page. The number of objects to return per page. The value must be between 1 and 100. (optional)
         * @return GetProjectCustomFieldSettingsRequestBuilder
         */
        public GetProjectCustomFieldSettingsRequestBuilder limit(Integer limit) {
            this.limit = limit;
            return this;
        }
        
        /**
         * Set offset
         * @param offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#39;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#39; (optional)
         * @return GetProjectCustomFieldSettingsRequestBuilder
         */
        public GetProjectCustomFieldSettingsRequestBuilder offset(String offset) {
            this.offset = offset;
            return this;
        }
        
        /**
         * Set optFields
         * @param optFields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include. (optional)
         * @return GetProjectCustomFieldSettingsRequestBuilder
         */
        public GetProjectCustomFieldSettingsRequestBuilder optFields(List<String> optFields) {
            this.optFields = optFields;
            return this;
        }
        
        /**
         * Build call for getProjectCustomFieldSettings
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successfully retrieved custom field settings objects for a project. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getProjectCustomFieldSettingsCall(projectGid, optPretty, limit, offset, optFields, _callback);
        }


        /**
         * Execute getProjectCustomFieldSettings request
         * @return CustomFieldSettingsGetProjectCustomFieldSettingsResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successfully retrieved custom field settings objects for a project. </td><td>  -  </td></tr>
         </table>
         */
        public CustomFieldSettingsGetProjectCustomFieldSettingsResponse execute() throws ApiException {
            ApiResponse<CustomFieldSettingsGetProjectCustomFieldSettingsResponse> localVarResp = getProjectCustomFieldSettingsWithHttpInfo(projectGid, optPretty, limit, offset, optFields);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getProjectCustomFieldSettings request with HTTP info returned
         * @return ApiResponse&lt;CustomFieldSettingsGetProjectCustomFieldSettingsResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successfully retrieved custom field settings objects for a project. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<CustomFieldSettingsGetProjectCustomFieldSettingsResponse> executeWithHttpInfo() throws ApiException {
            return getProjectCustomFieldSettingsWithHttpInfo(projectGid, optPretty, limit, offset, optFields);
        }

        /**
         * Execute getProjectCustomFieldSettings request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successfully retrieved custom field settings objects for a project. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<CustomFieldSettingsGetProjectCustomFieldSettingsResponse> _callback) throws ApiException {
            return getProjectCustomFieldSettingsAsync(projectGid, optPretty, limit, offset, optFields, _callback);
        }
    }

    /**
     * Get a project&#39;s custom fields
     * Returns a list of all of the custom fields settings on a project, in compact form. Note that, as in all queries to collections which return compact representation, &#x60;opt_fields&#x60; can be used to include more data than is returned in the compact representation. See the [documentation for input/output options](https://developers.asana.com/docs/inputoutput-options) for more information.
     * @param projectGid Globally unique identifier for the project. (required)
     * @return GetProjectCustomFieldSettingsRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved custom field settings objects for a project. </td><td>  -  </td></tr>
     </table>
     */
    public GetProjectCustomFieldSettingsRequestBuilder getProjectCustomFieldSettings(String projectGid) throws IllegalArgumentException {
        if (projectGid == null) throw new IllegalArgumentException("\"projectGid\" is required but got null");
            

        return new GetProjectCustomFieldSettingsRequestBuilder(projectGid);
    }
}
