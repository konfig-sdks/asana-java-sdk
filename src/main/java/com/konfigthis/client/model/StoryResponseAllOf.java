/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec](https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CustomFieldCompact;
import com.konfigthis.client.model.EnumOption;
import com.konfigthis.client.model.Like;
import com.konfigthis.client.model.Preview;
import com.konfigthis.client.model.ProjectCompact;
import com.konfigthis.client.model.SectionCompact;
import com.konfigthis.client.model.StoryCompact;
import com.konfigthis.client.model.StoryResponseDates;
import com.konfigthis.client.model.TagCompact;
import com.konfigthis.client.model.TaskCompact;
import com.konfigthis.client.model.UserCompact;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * StoryResponseAllOf
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class StoryResponseAllOf {
  public static final String SERIALIZED_NAME_CREATED_BY = "created_by";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private UserCompact createdBy;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
 public enum TypeEnum {
    COMMENT("comment"),
    
    SYSTEM("system");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_IS_EDITABLE = "is_editable";
  @SerializedName(SERIALIZED_NAME_IS_EDITABLE)
  private Boolean isEditable;

  public static final String SERIALIZED_NAME_IS_EDITED = "is_edited";
  @SerializedName(SERIALIZED_NAME_IS_EDITED)
  private Boolean isEdited;

  public static final String SERIALIZED_NAME_HEARTED = "hearted";
  @SerializedName(SERIALIZED_NAME_HEARTED)
  private Boolean hearted;

  public static final String SERIALIZED_NAME_HEARTS = "hearts";
  @SerializedName(SERIALIZED_NAME_HEARTS)
  private List<Like> hearts = null;

  public static final String SERIALIZED_NAME_NUM_HEARTS = "num_hearts";
  @SerializedName(SERIALIZED_NAME_NUM_HEARTS)
  private Integer numHearts;

  public static final String SERIALIZED_NAME_LIKED = "liked";
  @SerializedName(SERIALIZED_NAME_LIKED)
  private Boolean liked;

  public static final String SERIALIZED_NAME_LIKES = "likes";
  @SerializedName(SERIALIZED_NAME_LIKES)
  private List<Like> likes = null;

  public static final String SERIALIZED_NAME_NUM_LIKES = "num_likes";
  @SerializedName(SERIALIZED_NAME_NUM_LIKES)
  private Integer numLikes;

  public static final String SERIALIZED_NAME_PREVIEWS = "previews";
  @SerializedName(SERIALIZED_NAME_PREVIEWS)
  private List<Preview> previews = null;

  public static final String SERIALIZED_NAME_OLD_NAME = "old_name";
  @SerializedName(SERIALIZED_NAME_OLD_NAME)
  private String oldName;

  public static final String SERIALIZED_NAME_NEW_NAME = "new_name";
  @SerializedName(SERIALIZED_NAME_NEW_NAME)
  private String newName;

  public static final String SERIALIZED_NAME_OLD_DATES = "old_dates";
  @SerializedName(SERIALIZED_NAME_OLD_DATES)
  private StoryResponseDates oldDates;

  public static final String SERIALIZED_NAME_NEW_DATES = "new_dates";
  @SerializedName(SERIALIZED_NAME_NEW_DATES)
  private StoryResponseDates newDates;

  public static final String SERIALIZED_NAME_OLD_RESOURCE_SUBTYPE = "old_resource_subtype";
  @SerializedName(SERIALIZED_NAME_OLD_RESOURCE_SUBTYPE)
  private String oldResourceSubtype;

  public static final String SERIALIZED_NAME_NEW_RESOURCE_SUBTYPE = "new_resource_subtype";
  @SerializedName(SERIALIZED_NAME_NEW_RESOURCE_SUBTYPE)
  private String newResourceSubtype;

  public static final String SERIALIZED_NAME_STORY = "story";
  @SerializedName(SERIALIZED_NAME_STORY)
  private StoryCompact story;

  public static final String SERIALIZED_NAME_ASSIGNEE = "assignee";
  @SerializedName(SERIALIZED_NAME_ASSIGNEE)
  private UserCompact assignee;

  public static final String SERIALIZED_NAME_FOLLOWER = "follower";
  @SerializedName(SERIALIZED_NAME_FOLLOWER)
  private UserCompact follower;

  public static final String SERIALIZED_NAME_OLD_SECTION = "old_section";
  @SerializedName(SERIALIZED_NAME_OLD_SECTION)
  private SectionCompact oldSection;

  public static final String SERIALIZED_NAME_NEW_SECTION = "new_section";
  @SerializedName(SERIALIZED_NAME_NEW_SECTION)
  private SectionCompact newSection;

  public static final String SERIALIZED_NAME_TASK = "task";
  @SerializedName(SERIALIZED_NAME_TASK)
  private TaskCompact task;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private ProjectCompact project;

  public static final String SERIALIZED_NAME_TAG = "tag";
  @SerializedName(SERIALIZED_NAME_TAG)
  private TagCompact tag;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD = "custom_field";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD)
  private CustomFieldCompact customField;

  public static final String SERIALIZED_NAME_OLD_TEXT_VALUE = "old_text_value";
  @SerializedName(SERIALIZED_NAME_OLD_TEXT_VALUE)
  private String oldTextValue;

  public static final String SERIALIZED_NAME_NEW_TEXT_VALUE = "new_text_value";
  @SerializedName(SERIALIZED_NAME_NEW_TEXT_VALUE)
  private String newTextValue;

  public static final String SERIALIZED_NAME_OLD_NUMBER_VALUE = "old_number_value";
  @SerializedName(SERIALIZED_NAME_OLD_NUMBER_VALUE)
  private Integer oldNumberValue;

  public static final String SERIALIZED_NAME_NEW_NUMBER_VALUE = "new_number_value";
  @SerializedName(SERIALIZED_NAME_NEW_NUMBER_VALUE)
  private Integer newNumberValue;

  public static final String SERIALIZED_NAME_OLD_ENUM_VALUE = "old_enum_value";
  @SerializedName(SERIALIZED_NAME_OLD_ENUM_VALUE)
  private EnumOption oldEnumValue;

  public static final String SERIALIZED_NAME_NEW_ENUM_VALUE = "new_enum_value";
  @SerializedName(SERIALIZED_NAME_NEW_ENUM_VALUE)
  private EnumOption newEnumValue;

  public static final String SERIALIZED_NAME_OLD_DATE_VALUE = "old_date_value";
  @SerializedName(SERIALIZED_NAME_OLD_DATE_VALUE)
  private StoryResponseDates oldDateValue;

  public static final String SERIALIZED_NAME_NEW_DATE_VALUE = "new_date_value";
  @SerializedName(SERIALIZED_NAME_NEW_DATE_VALUE)
  private StoryResponseDates newDateValue;

  public static final String SERIALIZED_NAME_OLD_PEOPLE_VALUE = "old_people_value";
  @SerializedName(SERIALIZED_NAME_OLD_PEOPLE_VALUE)
  private List<UserCompact> oldPeopleValue = null;

  public static final String SERIALIZED_NAME_NEW_PEOPLE_VALUE = "new_people_value";
  @SerializedName(SERIALIZED_NAME_NEW_PEOPLE_VALUE)
  private List<UserCompact> newPeopleValue = null;

  public static final String SERIALIZED_NAME_OLD_MULTI_ENUM_VALUES = "old_multi_enum_values";
  @SerializedName(SERIALIZED_NAME_OLD_MULTI_ENUM_VALUES)
  private List<EnumOption> oldMultiEnumValues = null;

  public static final String SERIALIZED_NAME_NEW_MULTI_ENUM_VALUES = "new_multi_enum_values";
  @SerializedName(SERIALIZED_NAME_NEW_MULTI_ENUM_VALUES)
  private List<EnumOption> newMultiEnumValues = null;

  public static final String SERIALIZED_NAME_NEW_APPROVAL_STATUS = "new_approval_status";
  @SerializedName(SERIALIZED_NAME_NEW_APPROVAL_STATUS)
  private String newApprovalStatus;

  public static final String SERIALIZED_NAME_OLD_APPROVAL_STATUS = "old_approval_status";
  @SerializedName(SERIALIZED_NAME_OLD_APPROVAL_STATUS)
  private String oldApprovalStatus;

  public static final String SERIALIZED_NAME_DUPLICATE_OF = "duplicate_of";
  @SerializedName(SERIALIZED_NAME_DUPLICATE_OF)
  private TaskCompact duplicateOf;

  public static final String SERIALIZED_NAME_DUPLICATED_FROM = "duplicated_from";
  @SerializedName(SERIALIZED_NAME_DUPLICATED_FROM)
  private TaskCompact duplicatedFrom;

  public static final String SERIALIZED_NAME_DEPENDENCY = "dependency";
  @SerializedName(SERIALIZED_NAME_DEPENDENCY)
  private TaskCompact dependency;

  /**
   * The component of the Asana product the user used to trigger the story.
   */
  @JsonAdapter(SourceEnum.Adapter.class)
 public enum SourceEnum {
    WEB("web"),
    
    EMAIL("email"),
    
    MOBILE("mobile"),
    
    API("api"),
    
    UNKNOWN("unknown");

    private String value;

    SourceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SourceEnum fromValue(String value) {
      for (SourceEnum b : SourceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SourceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SourceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SourceEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SourceEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private SourceEnum source;

  public static final String SERIALIZED_NAME_TARGET = "target";
  @SerializedName(SERIALIZED_NAME_TARGET)
  private TaskCompact target;

  public StoryResponseAllOf() {
  }

  
  public StoryResponseAllOf(
     TypeEnum type, 
     Boolean isEditable, 
     Boolean isEdited, 
     Boolean hearted, 
     List<Like> hearts, 
     Integer numHearts, 
     Boolean liked, 
     List<Like> likes, 
     Integer numLikes, 
     List<Preview> previews, 
     String newName, 
     String oldResourceSubtype, 
     String newResourceSubtype, 
     String oldTextValue, 
     String newTextValue, 
     Integer oldNumberValue, 
     Integer newNumberValue, 
     StoryResponseDates oldDateValue, 
     StoryResponseDates newDateValue, 
     List<UserCompact> oldPeopleValue, 
     List<UserCompact> newPeopleValue, 
     List<EnumOption> oldMultiEnumValues, 
     List<EnumOption> newMultiEnumValues, 
     String newApprovalStatus, 
     String oldApprovalStatus, 
     SourceEnum source
  ) {
    this();
    this.type = type;
    this.isEditable = isEditable;
    this.isEdited = isEdited;
    this.hearted = hearted;
    this.hearts = hearts;
    this.numHearts = numHearts;
    this.liked = liked;
    this.likes = likes;
    this.numLikes = numLikes;
    this.previews = previews;
    this.newName = newName;
    this.oldResourceSubtype = oldResourceSubtype;
    this.newResourceSubtype = newResourceSubtype;
    this.oldTextValue = oldTextValue;
    this.newTextValue = newTextValue;
    this.oldNumberValue = oldNumberValue;
    this.newNumberValue = newNumberValue;
    this.oldDateValue = oldDateValue;
    this.newDateValue = newDateValue;
    this.oldPeopleValue = oldPeopleValue;
    this.newPeopleValue = newPeopleValue;
    this.oldMultiEnumValues = oldMultiEnumValues;
    this.newMultiEnumValues = newMultiEnumValues;
    this.newApprovalStatus = newApprovalStatus;
    this.oldApprovalStatus = oldApprovalStatus;
    this.source = source;
  }

  public StoryResponseAllOf createdBy(UserCompact createdBy) {
    
    
    
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserCompact getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(UserCompact createdBy) {
    
    
    
    this.createdBy = createdBy;
  }


   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "COMMENT", value = "")

  public TypeEnum getType() {
    return type;
  }




   /**
   * *Conditional*. Whether the text of the story can be edited after creation.
   * @return isEditable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "*Conditional*. Whether the text of the story can be edited after creation.")

  public Boolean getIsEditable() {
    return isEditable;
  }




   /**
   * *Conditional*. Whether the text of the story has been edited after creation.
   * @return isEdited
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "*Conditional*. Whether the text of the story has been edited after creation.")

  public Boolean getIsEdited() {
    return isEdited;
  }




   /**
   * *Deprecated - please use likes instead* *Conditional*. True if the story is hearted by the authorized user, false if not.
   * @return hearted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "*Deprecated - please use likes instead* *Conditional*. True if the story is hearted by the authorized user, false if not.")

  public Boolean getHearted() {
    return hearted;
  }




   /**
   * *Deprecated - please use likes instead*  *Conditional*. Array of likes for users who have hearted this story.
   * @return hearts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "*Deprecated - please use likes instead*  *Conditional*. Array of likes for users who have hearted this story.")

  public List<Like> getHearts() {
    return hearts;
  }




   /**
   * *Deprecated - please use likes instead*  *Conditional*. The number of users who have hearted this story.
   * @return numHearts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "*Deprecated - please use likes instead*  *Conditional*. The number of users who have hearted this story.")

  public Integer getNumHearts() {
    return numHearts;
  }




   /**
   * *Conditional*. True if the story is liked by the authorized user, false if not.
   * @return liked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "*Conditional*. True if the story is liked by the authorized user, false if not.")

  public Boolean getLiked() {
    return liked;
  }




   /**
   * *Conditional*. Array of likes for users who have liked this story.
   * @return likes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "*Conditional*. Array of likes for users who have liked this story.")

  public List<Like> getLikes() {
    return likes;
  }




   /**
   * *Conditional*. The number of users who have liked this story.
   * @return numLikes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "*Conditional*. The number of users who have liked this story.")

  public Integer getNumLikes() {
    return numLikes;
  }




   /**
   * *Conditional*. A collection of previews to be displayed in the story.  *Note: This property only exists for comment stories.*
   * @return previews
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "*Conditional*. A collection of previews to be displayed in the story.  *Note: This property only exists for comment stories.*")

  public List<Preview> getPreviews() {
    return previews;
  }




  public StoryResponseAllOf oldName(String oldName) {
    
    
    
    
    this.oldName = oldName;
    return this;
  }

   /**
   * *Conditional*&#39;
   * @return oldName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "This was the Old Name", value = "*Conditional*'")

  public String getOldName() {
    return oldName;
  }


  public void setOldName(String oldName) {
    
    
    
    this.oldName = oldName;
  }


   /**
   * *Conditional*
   * @return newName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "This is the New Name", value = "*Conditional*")

  public String getNewName() {
    return newName;
  }




  public StoryResponseAllOf oldDates(StoryResponseDates oldDates) {
    
    
    
    
    this.oldDates = oldDates;
    return this;
  }

   /**
   * Get oldDates
   * @return oldDates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StoryResponseDates getOldDates() {
    return oldDates;
  }


  public void setOldDates(StoryResponseDates oldDates) {
    
    
    
    this.oldDates = oldDates;
  }


  public StoryResponseAllOf newDates(StoryResponseDates newDates) {
    
    
    
    
    this.newDates = newDates;
    return this;
  }

   /**
   * Get newDates
   * @return newDates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StoryResponseDates getNewDates() {
    return newDates;
  }


  public void setNewDates(StoryResponseDates newDates) {
    
    
    
    this.newDates = newDates;
  }


   /**
   * *Conditional*
   * @return oldResourceSubtype
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "default_task", value = "*Conditional*")

  public String getOldResourceSubtype() {
    return oldResourceSubtype;
  }




   /**
   * *Conditional*
   * @return newResourceSubtype
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "milestone", value = "*Conditional*")

  public String getNewResourceSubtype() {
    return newResourceSubtype;
  }




  public StoryResponseAllOf story(StoryCompact story) {
    
    
    
    
    this.story = story;
    return this;
  }

   /**
   * Get story
   * @return story
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StoryCompact getStory() {
    return story;
  }


  public void setStory(StoryCompact story) {
    
    
    
    this.story = story;
  }


  public StoryResponseAllOf assignee(UserCompact assignee) {
    
    
    
    
    this.assignee = assignee;
    return this;
  }

   /**
   * Get assignee
   * @return assignee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserCompact getAssignee() {
    return assignee;
  }


  public void setAssignee(UserCompact assignee) {
    
    
    
    this.assignee = assignee;
  }


  public StoryResponseAllOf follower(UserCompact follower) {
    
    
    
    
    this.follower = follower;
    return this;
  }

   /**
   * Get follower
   * @return follower
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserCompact getFollower() {
    return follower;
  }


  public void setFollower(UserCompact follower) {
    
    
    
    this.follower = follower;
  }


  public StoryResponseAllOf oldSection(SectionCompact oldSection) {
    
    
    
    
    this.oldSection = oldSection;
    return this;
  }

   /**
   * Get oldSection
   * @return oldSection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SectionCompact getOldSection() {
    return oldSection;
  }


  public void setOldSection(SectionCompact oldSection) {
    
    
    
    this.oldSection = oldSection;
  }


  public StoryResponseAllOf newSection(SectionCompact newSection) {
    
    
    
    
    this.newSection = newSection;
    return this;
  }

   /**
   * Get newSection
   * @return newSection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SectionCompact getNewSection() {
    return newSection;
  }


  public void setNewSection(SectionCompact newSection) {
    
    
    
    this.newSection = newSection;
  }


  public StoryResponseAllOf task(TaskCompact task) {
    
    
    
    
    this.task = task;
    return this;
  }

   /**
   * Get task
   * @return task
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TaskCompact getTask() {
    return task;
  }


  public void setTask(TaskCompact task) {
    
    
    
    this.task = task;
  }


  public StoryResponseAllOf project(ProjectCompact project) {
    
    
    
    
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProjectCompact getProject() {
    return project;
  }


  public void setProject(ProjectCompact project) {
    
    
    
    this.project = project;
  }


  public StoryResponseAllOf tag(TagCompact tag) {
    
    
    
    
    this.tag = tag;
    return this;
  }

   /**
   * Get tag
   * @return tag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TagCompact getTag() {
    return tag;
  }


  public void setTag(TagCompact tag) {
    
    
    
    this.tag = tag;
  }


  public StoryResponseAllOf customField(CustomFieldCompact customField) {
    
    
    
    
    this.customField = customField;
    return this;
  }

   /**
   * Get customField
   * @return customField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CustomFieldCompact getCustomField() {
    return customField;
  }


  public void setCustomField(CustomFieldCompact customField) {
    
    
    
    this.customField = customField;
  }


   /**
   * *Conditional*
   * @return oldTextValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "This was the Old Text", value = "*Conditional*")

  public String getOldTextValue() {
    return oldTextValue;
  }




   /**
   * *Conditional*
   * @return newTextValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "This is the New Text", value = "*Conditional*")

  public String getNewTextValue() {
    return newTextValue;
  }




   /**
   * *Conditional*
   * @return oldNumberValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "*Conditional*")

  public Integer getOldNumberValue() {
    return oldNumberValue;
  }




   /**
   * *Conditional*
   * @return newNumberValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "*Conditional*")

  public Integer getNewNumberValue() {
    return newNumberValue;
  }




  public StoryResponseAllOf oldEnumValue(EnumOption oldEnumValue) {
    
    
    
    
    this.oldEnumValue = oldEnumValue;
    return this;
  }

   /**
   * Get oldEnumValue
   * @return oldEnumValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumOption getOldEnumValue() {
    return oldEnumValue;
  }


  public void setOldEnumValue(EnumOption oldEnumValue) {
    
    
    
    this.oldEnumValue = oldEnumValue;
  }


  public StoryResponseAllOf newEnumValue(EnumOption newEnumValue) {
    
    
    
    
    this.newEnumValue = newEnumValue;
    return this;
  }

   /**
   * Get newEnumValue
   * @return newEnumValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumOption getNewEnumValue() {
    return newEnumValue;
  }


  public void setNewEnumValue(EnumOption newEnumValue) {
    
    
    
    this.newEnumValue = newEnumValue;
  }


   /**
   * Get oldDateValue
   * @return oldDateValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StoryResponseDates getOldDateValue() {
    return oldDateValue;
  }




   /**
   * Get newDateValue
   * @return newDateValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StoryResponseDates getNewDateValue() {
    return newDateValue;
  }




   /**
   * *Conditional*. The old value of a people custom field story.
   * @return oldPeopleValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "*Conditional*. The old value of a people custom field story.")

  public List<UserCompact> getOldPeopleValue() {
    return oldPeopleValue;
  }




   /**
   * *Conditional*. The new value of a people custom field story.
   * @return newPeopleValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "*Conditional*. The new value of a people custom field story.")

  public List<UserCompact> getNewPeopleValue() {
    return newPeopleValue;
  }




   /**
   * *Conditional*. The old value of a multi-enum custom field story.
   * @return oldMultiEnumValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "*Conditional*. The old value of a multi-enum custom field story.")

  public List<EnumOption> getOldMultiEnumValues() {
    return oldMultiEnumValues;
  }




   /**
   * *Conditional*. The new value of a multi-enum custom field story.
   * @return newMultiEnumValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "*Conditional*. The new value of a multi-enum custom field story.")

  public List<EnumOption> getNewMultiEnumValues() {
    return newMultiEnumValues;
  }




   /**
   * *Conditional*. The new value of approval status.
   * @return newApprovalStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "approved", value = "*Conditional*. The new value of approval status.")

  public String getNewApprovalStatus() {
    return newApprovalStatus;
  }




   /**
   * *Conditional*. The old value of approval status.
   * @return oldApprovalStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "pending", value = "*Conditional*. The old value of approval status.")

  public String getOldApprovalStatus() {
    return oldApprovalStatus;
  }




  public StoryResponseAllOf duplicateOf(TaskCompact duplicateOf) {
    
    
    
    
    this.duplicateOf = duplicateOf;
    return this;
  }

   /**
   * Get duplicateOf
   * @return duplicateOf
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TaskCompact getDuplicateOf() {
    return duplicateOf;
  }


  public void setDuplicateOf(TaskCompact duplicateOf) {
    
    
    
    this.duplicateOf = duplicateOf;
  }


  public StoryResponseAllOf duplicatedFrom(TaskCompact duplicatedFrom) {
    
    
    
    
    this.duplicatedFrom = duplicatedFrom;
    return this;
  }

   /**
   * Get duplicatedFrom
   * @return duplicatedFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TaskCompact getDuplicatedFrom() {
    return duplicatedFrom;
  }


  public void setDuplicatedFrom(TaskCompact duplicatedFrom) {
    
    
    
    this.duplicatedFrom = duplicatedFrom;
  }


  public StoryResponseAllOf dependency(TaskCompact dependency) {
    
    
    
    
    this.dependency = dependency;
    return this;
  }

   /**
   * Get dependency
   * @return dependency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TaskCompact getDependency() {
    return dependency;
  }


  public void setDependency(TaskCompact dependency) {
    
    
    
    this.dependency = dependency;
  }


   /**
   * The component of the Asana product the user used to trigger the story.
   * @return source
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "WEB", value = "The component of the Asana product the user used to trigger the story.")

  public SourceEnum getSource() {
    return source;
  }




  public StoryResponseAllOf target(TaskCompact target) {
    
    
    
    
    this.target = target;
    return this;
  }

   /**
   * Get target
   * @return target
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TaskCompact getTarget() {
    return target;
  }


  public void setTarget(TaskCompact target) {
    
    
    
    this.target = target;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the StoryResponseAllOf instance itself
   */
  public StoryResponseAllOf putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StoryResponseAllOf storyResponseAllOf = (StoryResponseAllOf) o;
    return Objects.equals(this.createdBy, storyResponseAllOf.createdBy) &&
        Objects.equals(this.type, storyResponseAllOf.type) &&
        Objects.equals(this.isEditable, storyResponseAllOf.isEditable) &&
        Objects.equals(this.isEdited, storyResponseAllOf.isEdited) &&
        Objects.equals(this.hearted, storyResponseAllOf.hearted) &&
        Objects.equals(this.hearts, storyResponseAllOf.hearts) &&
        Objects.equals(this.numHearts, storyResponseAllOf.numHearts) &&
        Objects.equals(this.liked, storyResponseAllOf.liked) &&
        Objects.equals(this.likes, storyResponseAllOf.likes) &&
        Objects.equals(this.numLikes, storyResponseAllOf.numLikes) &&
        Objects.equals(this.previews, storyResponseAllOf.previews) &&
        Objects.equals(this.oldName, storyResponseAllOf.oldName) &&
        Objects.equals(this.newName, storyResponseAllOf.newName) &&
        Objects.equals(this.oldDates, storyResponseAllOf.oldDates) &&
        Objects.equals(this.newDates, storyResponseAllOf.newDates) &&
        Objects.equals(this.oldResourceSubtype, storyResponseAllOf.oldResourceSubtype) &&
        Objects.equals(this.newResourceSubtype, storyResponseAllOf.newResourceSubtype) &&
        Objects.equals(this.story, storyResponseAllOf.story) &&
        Objects.equals(this.assignee, storyResponseAllOf.assignee) &&
        Objects.equals(this.follower, storyResponseAllOf.follower) &&
        Objects.equals(this.oldSection, storyResponseAllOf.oldSection) &&
        Objects.equals(this.newSection, storyResponseAllOf.newSection) &&
        Objects.equals(this.task, storyResponseAllOf.task) &&
        Objects.equals(this.project, storyResponseAllOf.project) &&
        Objects.equals(this.tag, storyResponseAllOf.tag) &&
        Objects.equals(this.customField, storyResponseAllOf.customField) &&
        Objects.equals(this.oldTextValue, storyResponseAllOf.oldTextValue) &&
        Objects.equals(this.newTextValue, storyResponseAllOf.newTextValue) &&
        Objects.equals(this.oldNumberValue, storyResponseAllOf.oldNumberValue) &&
        Objects.equals(this.newNumberValue, storyResponseAllOf.newNumberValue) &&
        Objects.equals(this.oldEnumValue, storyResponseAllOf.oldEnumValue) &&
        Objects.equals(this.newEnumValue, storyResponseAllOf.newEnumValue) &&
        Objects.equals(this.oldDateValue, storyResponseAllOf.oldDateValue) &&
        Objects.equals(this.newDateValue, storyResponseAllOf.newDateValue) &&
        Objects.equals(this.oldPeopleValue, storyResponseAllOf.oldPeopleValue) &&
        Objects.equals(this.newPeopleValue, storyResponseAllOf.newPeopleValue) &&
        Objects.equals(this.oldMultiEnumValues, storyResponseAllOf.oldMultiEnumValues) &&
        Objects.equals(this.newMultiEnumValues, storyResponseAllOf.newMultiEnumValues) &&
        Objects.equals(this.newApprovalStatus, storyResponseAllOf.newApprovalStatus) &&
        Objects.equals(this.oldApprovalStatus, storyResponseAllOf.oldApprovalStatus) &&
        Objects.equals(this.duplicateOf, storyResponseAllOf.duplicateOf) &&
        Objects.equals(this.duplicatedFrom, storyResponseAllOf.duplicatedFrom) &&
        Objects.equals(this.dependency, storyResponseAllOf.dependency) &&
        Objects.equals(this.source, storyResponseAllOf.source) &&
        Objects.equals(this.target, storyResponseAllOf.target)&&
        Objects.equals(this.additionalProperties, storyResponseAllOf.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdBy, type, isEditable, isEdited, hearted, hearts, numHearts, liked, likes, numLikes, previews, oldName, newName, oldDates, newDates, oldResourceSubtype, newResourceSubtype, story, assignee, follower, oldSection, newSection, task, project, tag, customField, oldTextValue, newTextValue, oldNumberValue, newNumberValue, oldEnumValue, newEnumValue, oldDateValue, newDateValue, oldPeopleValue, newPeopleValue, oldMultiEnumValues, newMultiEnumValues, newApprovalStatus, oldApprovalStatus, duplicateOf, duplicatedFrom, dependency, source, target, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StoryResponseAllOf {\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    isEditable: ").append(toIndentedString(isEditable)).append("\n");
    sb.append("    isEdited: ").append(toIndentedString(isEdited)).append("\n");
    sb.append("    hearted: ").append(toIndentedString(hearted)).append("\n");
    sb.append("    hearts: ").append(toIndentedString(hearts)).append("\n");
    sb.append("    numHearts: ").append(toIndentedString(numHearts)).append("\n");
    sb.append("    liked: ").append(toIndentedString(liked)).append("\n");
    sb.append("    likes: ").append(toIndentedString(likes)).append("\n");
    sb.append("    numLikes: ").append(toIndentedString(numLikes)).append("\n");
    sb.append("    previews: ").append(toIndentedString(previews)).append("\n");
    sb.append("    oldName: ").append(toIndentedString(oldName)).append("\n");
    sb.append("    newName: ").append(toIndentedString(newName)).append("\n");
    sb.append("    oldDates: ").append(toIndentedString(oldDates)).append("\n");
    sb.append("    newDates: ").append(toIndentedString(newDates)).append("\n");
    sb.append("    oldResourceSubtype: ").append(toIndentedString(oldResourceSubtype)).append("\n");
    sb.append("    newResourceSubtype: ").append(toIndentedString(newResourceSubtype)).append("\n");
    sb.append("    story: ").append(toIndentedString(story)).append("\n");
    sb.append("    assignee: ").append(toIndentedString(assignee)).append("\n");
    sb.append("    follower: ").append(toIndentedString(follower)).append("\n");
    sb.append("    oldSection: ").append(toIndentedString(oldSection)).append("\n");
    sb.append("    newSection: ").append(toIndentedString(newSection)).append("\n");
    sb.append("    task: ").append(toIndentedString(task)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    customField: ").append(toIndentedString(customField)).append("\n");
    sb.append("    oldTextValue: ").append(toIndentedString(oldTextValue)).append("\n");
    sb.append("    newTextValue: ").append(toIndentedString(newTextValue)).append("\n");
    sb.append("    oldNumberValue: ").append(toIndentedString(oldNumberValue)).append("\n");
    sb.append("    newNumberValue: ").append(toIndentedString(newNumberValue)).append("\n");
    sb.append("    oldEnumValue: ").append(toIndentedString(oldEnumValue)).append("\n");
    sb.append("    newEnumValue: ").append(toIndentedString(newEnumValue)).append("\n");
    sb.append("    oldDateValue: ").append(toIndentedString(oldDateValue)).append("\n");
    sb.append("    newDateValue: ").append(toIndentedString(newDateValue)).append("\n");
    sb.append("    oldPeopleValue: ").append(toIndentedString(oldPeopleValue)).append("\n");
    sb.append("    newPeopleValue: ").append(toIndentedString(newPeopleValue)).append("\n");
    sb.append("    oldMultiEnumValues: ").append(toIndentedString(oldMultiEnumValues)).append("\n");
    sb.append("    newMultiEnumValues: ").append(toIndentedString(newMultiEnumValues)).append("\n");
    sb.append("    newApprovalStatus: ").append(toIndentedString(newApprovalStatus)).append("\n");
    sb.append("    oldApprovalStatus: ").append(toIndentedString(oldApprovalStatus)).append("\n");
    sb.append("    duplicateOf: ").append(toIndentedString(duplicateOf)).append("\n");
    sb.append("    duplicatedFrom: ").append(toIndentedString(duplicatedFrom)).append("\n");
    sb.append("    dependency: ").append(toIndentedString(dependency)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("created_by");
    openapiFields.add("type");
    openapiFields.add("is_editable");
    openapiFields.add("is_edited");
    openapiFields.add("hearted");
    openapiFields.add("hearts");
    openapiFields.add("num_hearts");
    openapiFields.add("liked");
    openapiFields.add("likes");
    openapiFields.add("num_likes");
    openapiFields.add("previews");
    openapiFields.add("old_name");
    openapiFields.add("new_name");
    openapiFields.add("old_dates");
    openapiFields.add("new_dates");
    openapiFields.add("old_resource_subtype");
    openapiFields.add("new_resource_subtype");
    openapiFields.add("story");
    openapiFields.add("assignee");
    openapiFields.add("follower");
    openapiFields.add("old_section");
    openapiFields.add("new_section");
    openapiFields.add("task");
    openapiFields.add("project");
    openapiFields.add("tag");
    openapiFields.add("custom_field");
    openapiFields.add("old_text_value");
    openapiFields.add("new_text_value");
    openapiFields.add("old_number_value");
    openapiFields.add("new_number_value");
    openapiFields.add("old_enum_value");
    openapiFields.add("new_enum_value");
    openapiFields.add("old_date_value");
    openapiFields.add("new_date_value");
    openapiFields.add("old_people_value");
    openapiFields.add("new_people_value");
    openapiFields.add("old_multi_enum_values");
    openapiFields.add("new_multi_enum_values");
    openapiFields.add("new_approval_status");
    openapiFields.add("old_approval_status");
    openapiFields.add("duplicate_of");
    openapiFields.add("duplicated_from");
    openapiFields.add("dependency");
    openapiFields.add("source");
    openapiFields.add("target");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to StoryResponseAllOf
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!StoryResponseAllOf.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StoryResponseAllOf is not found in the empty JSON string", StoryResponseAllOf.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `created_by`
      if (jsonObj.get("created_by") != null && !jsonObj.get("created_by").isJsonNull()) {
        UserCompact.validateJsonObject(jsonObj.getAsJsonObject("created_by"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if (jsonObj.get("hearts") != null && !jsonObj.get("hearts").isJsonNull()) {
        JsonArray jsonArrayhearts = jsonObj.getAsJsonArray("hearts");
        if (jsonArrayhearts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("hearts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `hearts` to be an array in the JSON string but got `%s`", jsonObj.get("hearts").toString()));
          }

          // validate the optional field `hearts` (array)
          for (int i = 0; i < jsonArrayhearts.size(); i++) {
            Like.validateJsonObject(jsonArrayhearts.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("likes") != null && !jsonObj.get("likes").isJsonNull()) {
        JsonArray jsonArraylikes = jsonObj.getAsJsonArray("likes");
        if (jsonArraylikes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("likes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `likes` to be an array in the JSON string but got `%s`", jsonObj.get("likes").toString()));
          }

          // validate the optional field `likes` (array)
          for (int i = 0; i < jsonArraylikes.size(); i++) {
            Like.validateJsonObject(jsonArraylikes.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("previews") != null && !jsonObj.get("previews").isJsonNull()) {
        JsonArray jsonArraypreviews = jsonObj.getAsJsonArray("previews");
        if (jsonArraypreviews != null) {
          // ensure the json data is an array
          if (!jsonObj.get("previews").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `previews` to be an array in the JSON string but got `%s`", jsonObj.get("previews").toString()));
          }

          // validate the optional field `previews` (array)
          for (int i = 0; i < jsonArraypreviews.size(); i++) {
            Preview.validateJsonObject(jsonArraypreviews.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("old_name") != null && !jsonObj.get("old_name").isJsonNull()) && !jsonObj.get("old_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `old_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("old_name").toString()));
      }
      if (!jsonObj.get("new_name").isJsonNull() && (jsonObj.get("new_name") != null && !jsonObj.get("new_name").isJsonNull()) && !jsonObj.get("new_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `new_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("new_name").toString()));
      }
      // validate the optional field `old_dates`
      if (jsonObj.get("old_dates") != null && !jsonObj.get("old_dates").isJsonNull()) {
        StoryResponseDates.validateJsonObject(jsonObj.getAsJsonObject("old_dates"));
      }
      // validate the optional field `new_dates`
      if (jsonObj.get("new_dates") != null && !jsonObj.get("new_dates").isJsonNull()) {
        StoryResponseDates.validateJsonObject(jsonObj.getAsJsonObject("new_dates"));
      }
      if ((jsonObj.get("old_resource_subtype") != null && !jsonObj.get("old_resource_subtype").isJsonNull()) && !jsonObj.get("old_resource_subtype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `old_resource_subtype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("old_resource_subtype").toString()));
      }
      if ((jsonObj.get("new_resource_subtype") != null && !jsonObj.get("new_resource_subtype").isJsonNull()) && !jsonObj.get("new_resource_subtype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `new_resource_subtype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("new_resource_subtype").toString()));
      }
      // validate the optional field `story`
      if (jsonObj.get("story") != null && !jsonObj.get("story").isJsonNull()) {
        StoryCompact.validateJsonObject(jsonObj.getAsJsonObject("story"));
      }
      // validate the optional field `assignee`
      if (jsonObj.get("assignee") != null && !jsonObj.get("assignee").isJsonNull()) {
        UserCompact.validateJsonObject(jsonObj.getAsJsonObject("assignee"));
      }
      // validate the optional field `follower`
      if (jsonObj.get("follower") != null && !jsonObj.get("follower").isJsonNull()) {
        UserCompact.validateJsonObject(jsonObj.getAsJsonObject("follower"));
      }
      // validate the optional field `old_section`
      if (jsonObj.get("old_section") != null && !jsonObj.get("old_section").isJsonNull()) {
        SectionCompact.validateJsonObject(jsonObj.getAsJsonObject("old_section"));
      }
      // validate the optional field `new_section`
      if (jsonObj.get("new_section") != null && !jsonObj.get("new_section").isJsonNull()) {
        SectionCompact.validateJsonObject(jsonObj.getAsJsonObject("new_section"));
      }
      // validate the optional field `task`
      if (jsonObj.get("task") != null && !jsonObj.get("task").isJsonNull()) {
        TaskCompact.validateJsonObject(jsonObj.getAsJsonObject("task"));
      }
      // validate the optional field `project`
      if (jsonObj.get("project") != null && !jsonObj.get("project").isJsonNull()) {
        ProjectCompact.validateJsonObject(jsonObj.getAsJsonObject("project"));
      }
      // validate the optional field `tag`
      if (jsonObj.get("tag") != null && !jsonObj.get("tag").isJsonNull()) {
        TagCompact.validateJsonObject(jsonObj.getAsJsonObject("tag"));
      }
      // validate the optional field `custom_field`
      if (jsonObj.get("custom_field") != null && !jsonObj.get("custom_field").isJsonNull()) {
        CustomFieldCompact.validateJsonObject(jsonObj.getAsJsonObject("custom_field"));
      }
      if ((jsonObj.get("old_text_value") != null && !jsonObj.get("old_text_value").isJsonNull()) && !jsonObj.get("old_text_value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `old_text_value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("old_text_value").toString()));
      }
      if ((jsonObj.get("new_text_value") != null && !jsonObj.get("new_text_value").isJsonNull()) && !jsonObj.get("new_text_value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `new_text_value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("new_text_value").toString()));
      }
      // validate the optional field `old_enum_value`
      if (jsonObj.get("old_enum_value") != null && !jsonObj.get("old_enum_value").isJsonNull()) {
        EnumOption.validateJsonObject(jsonObj.getAsJsonObject("old_enum_value"));
      }
      // validate the optional field `new_enum_value`
      if (jsonObj.get("new_enum_value") != null && !jsonObj.get("new_enum_value").isJsonNull()) {
        EnumOption.validateJsonObject(jsonObj.getAsJsonObject("new_enum_value"));
      }
      // validate the optional field `old_date_value`
      if (jsonObj.get("old_date_value") != null && !jsonObj.get("old_date_value").isJsonNull()) {
        StoryResponseDates.validateJsonObject(jsonObj.getAsJsonObject("old_date_value"));
      }
      // validate the optional field `new_date_value`
      if (jsonObj.get("new_date_value") != null && !jsonObj.get("new_date_value").isJsonNull()) {
        StoryResponseDates.validateJsonObject(jsonObj.getAsJsonObject("new_date_value"));
      }
      if (jsonObj.get("old_people_value") != null && !jsonObj.get("old_people_value").isJsonNull()) {
        JsonArray jsonArrayoldPeopleValue = jsonObj.getAsJsonArray("old_people_value");
        if (jsonArrayoldPeopleValue != null) {
          // ensure the json data is an array
          if (!jsonObj.get("old_people_value").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `old_people_value` to be an array in the JSON string but got `%s`", jsonObj.get("old_people_value").toString()));
          }

          // validate the optional field `old_people_value` (array)
          for (int i = 0; i < jsonArrayoldPeopleValue.size(); i++) {
            UserCompact.validateJsonObject(jsonArrayoldPeopleValue.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("new_people_value") != null && !jsonObj.get("new_people_value").isJsonNull()) {
        JsonArray jsonArraynewPeopleValue = jsonObj.getAsJsonArray("new_people_value");
        if (jsonArraynewPeopleValue != null) {
          // ensure the json data is an array
          if (!jsonObj.get("new_people_value").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `new_people_value` to be an array in the JSON string but got `%s`", jsonObj.get("new_people_value").toString()));
          }

          // validate the optional field `new_people_value` (array)
          for (int i = 0; i < jsonArraynewPeopleValue.size(); i++) {
            UserCompact.validateJsonObject(jsonArraynewPeopleValue.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("old_multi_enum_values") != null && !jsonObj.get("old_multi_enum_values").isJsonNull()) {
        JsonArray jsonArrayoldMultiEnumValues = jsonObj.getAsJsonArray("old_multi_enum_values");
        if (jsonArrayoldMultiEnumValues != null) {
          // ensure the json data is an array
          if (!jsonObj.get("old_multi_enum_values").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `old_multi_enum_values` to be an array in the JSON string but got `%s`", jsonObj.get("old_multi_enum_values").toString()));
          }

          // validate the optional field `old_multi_enum_values` (array)
          for (int i = 0; i < jsonArrayoldMultiEnumValues.size(); i++) {
            EnumOption.validateJsonObject(jsonArrayoldMultiEnumValues.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("new_multi_enum_values") != null && !jsonObj.get("new_multi_enum_values").isJsonNull()) {
        JsonArray jsonArraynewMultiEnumValues = jsonObj.getAsJsonArray("new_multi_enum_values");
        if (jsonArraynewMultiEnumValues != null) {
          // ensure the json data is an array
          if (!jsonObj.get("new_multi_enum_values").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `new_multi_enum_values` to be an array in the JSON string but got `%s`", jsonObj.get("new_multi_enum_values").toString()));
          }

          // validate the optional field `new_multi_enum_values` (array)
          for (int i = 0; i < jsonArraynewMultiEnumValues.size(); i++) {
            EnumOption.validateJsonObject(jsonArraynewMultiEnumValues.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("new_approval_status") != null && !jsonObj.get("new_approval_status").isJsonNull()) && !jsonObj.get("new_approval_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `new_approval_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("new_approval_status").toString()));
      }
      if ((jsonObj.get("old_approval_status") != null && !jsonObj.get("old_approval_status").isJsonNull()) && !jsonObj.get("old_approval_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `old_approval_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("old_approval_status").toString()));
      }
      // validate the optional field `duplicate_of`
      if (jsonObj.get("duplicate_of") != null && !jsonObj.get("duplicate_of").isJsonNull()) {
        TaskCompact.validateJsonObject(jsonObj.getAsJsonObject("duplicate_of"));
      }
      // validate the optional field `duplicated_from`
      if (jsonObj.get("duplicated_from") != null && !jsonObj.get("duplicated_from").isJsonNull()) {
        TaskCompact.validateJsonObject(jsonObj.getAsJsonObject("duplicated_from"));
      }
      // validate the optional field `dependency`
      if (jsonObj.get("dependency") != null && !jsonObj.get("dependency").isJsonNull()) {
        TaskCompact.validateJsonObject(jsonObj.getAsJsonObject("dependency"));
      }
      if ((jsonObj.get("source") != null && !jsonObj.get("source").isJsonNull()) && !jsonObj.get("source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source").toString()));
      }
      // validate the optional field `target`
      if (jsonObj.get("target") != null && !jsonObj.get("target").isJsonNull()) {
        TaskCompact.validateJsonObject(jsonObj.getAsJsonObject("target"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StoryResponseAllOf.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StoryResponseAllOf' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StoryResponseAllOf> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StoryResponseAllOf.class));

       return (TypeAdapter<T>) new TypeAdapter<StoryResponseAllOf>() {
           @Override
           public void write(JsonWriter out, StoryResponseAllOf value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public StoryResponseAllOf read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             StoryResponseAllOf instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of StoryResponseAllOf given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of StoryResponseAllOf
  * @throws IOException if the JSON string is invalid with respect to StoryResponseAllOf
  */
  public static StoryResponseAllOf fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StoryResponseAllOf.class);
  }

 /**
  * Convert an instance of StoryResponseAllOf to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

