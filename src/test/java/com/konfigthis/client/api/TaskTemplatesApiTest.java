/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec](https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.TaskTemplateInstantiateTaskRequest;
import com.konfigthis.client.model.TaskTemplatesDeleteTaskTemplateResponse;
import com.konfigthis.client.model.TaskTemplatesGetSingleTemplateResponse;
import com.konfigthis.client.model.TaskTemplatesInstantiateTaskJobRequest;
import com.konfigthis.client.model.TaskTemplatesInstantiateTaskJobResponse;
import com.konfigthis.client.model.TaskTemplatesListMultipleResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TaskTemplatesApi
 */
@Disabled
public class TaskTemplatesApiTest {

    private static TaskTemplatesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TaskTemplatesApi(apiClient);
    }

    /**
     * Delete a task template
     *
     * A specific, existing task template can be deleted by making a DELETE request on the URL for that task template. Returns an empty data record.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTaskTemplateTest() throws ApiException {
        String taskTemplateGid = null;
        Boolean optPretty = null;
        TaskTemplatesDeleteTaskTemplateResponse response = api.deleteTaskTemplate(taskTemplateGid)
                .optPretty(optPretty)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a task template
     *
     * Returns the complete task template record for a single task template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleTemplateTest() throws ApiException {
        String taskTemplateGid = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        TaskTemplatesGetSingleTemplateResponse response = api.getSingleTemplate(taskTemplateGid)
                .optPretty(optPretty)
                .optFields(optFields)
                .execute();
        // TODO: test validations
    }

    /**
     * Instantiate a task from a task template
     *
     * Creates and returns a job that will asynchronously handle the task instantiation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void instantiateTaskJobTest() throws ApiException {
        String taskTemplateGid = null;
        TaskTemplateInstantiateTaskRequest data = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        TaskTemplatesInstantiateTaskJobResponse response = api.instantiateTaskJob(taskTemplateGid)
                .data(data)
                .optPretty(optPretty)
                .optFields(optFields)
                .execute();
        // TODO: test validations
    }

    /**
     * Get multiple task templates
     *
     * Returns the compact task template records for some filtered set of task templates. You must specify a &#x60;project&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMultipleTest() throws ApiException {
        Boolean optPretty = null;
        Integer limit = null;
        String offset = null;
        String project = null;
        List<String> optFields = null;
        TaskTemplatesListMultipleResponse response = api.listMultiple()
                .optPretty(optPretty)
                .limit(limit)
                .offset(offset)
                .project(project)
                .optFields(optFields)
                .execute();
        // TODO: test validations
    }

}
