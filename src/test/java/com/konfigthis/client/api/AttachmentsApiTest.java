/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec](https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AttachmentRequest;
import com.konfigthis.client.model.AttachmentsDeleteSpecificResponse;
import com.konfigthis.client.model.AttachmentsGetAllForObjectResponse;
import com.konfigthis.client.model.AttachmentsGetAttachmentRecordResponse;
import com.konfigthis.client.model.AttachmentsUploadAttachmentResponse;
import java.io.File;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AttachmentsApi
 */
@Disabled
public class AttachmentsApiTest {

    private static AttachmentsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new AttachmentsApi(apiClient);
    }

    /**
     * Delete an attachment
     *
     * Deletes a specific, existing attachment.  Returns an empty data record.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSpecificTest() throws ApiException {
        String attachmentGid = null;
        Boolean optPretty = null;
        AttachmentsDeleteSpecificResponse response = api.deleteSpecific(attachmentGid)
                .optPretty(optPretty)
                .execute();
        // TODO: test validations
    }

    /**
     * Get attachments from an object
     *
     * Returns the compact records for all attachments on the object.  There are three possible &#x60;parent&#x60; values for this request: &#x60;project&#x60;, &#x60;project_brief&#x60;, and &#x60;task&#x60;. For a project, an attachment refers to a file uploaded to the \&quot;Key resources\&quot; section in the project Overview. For a project brief, an attachment refers to inline files in the project brief itself. For a task, an attachment refers to a file directly associated to that task.  Note that within the Asana app, inline images in the task description do not appear in the index of image thumbnails nor as stories in the task. However, requests made to &#x60;GET /attachments&#x60; for a task will return all of the images in the task, including inline images.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllForObjectTest() throws ApiException {
        String parent = null;
        Boolean optPretty = null;
        Integer limit = null;
        String offset = null;
        List<String> optFields = null;
        AttachmentsGetAllForObjectResponse response = api.getAllForObject(parent)
                .optPretty(optPretty)
                .limit(limit)
                .offset(offset)
                .optFields(optFields)
                .execute();
        // TODO: test validations
    }

    /**
     * Get an attachment
     *
     * Get the full record for a single attachment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttachmentRecordTest() throws ApiException {
        String attachmentGid = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        AttachmentsGetAttachmentRecordResponse response = api.getAttachmentRecord(attachmentGid)
                .optPretty(optPretty)
                .optFields(optFields)
                .execute();
        // TODO: test validations
    }

    /**
     * Upload an attachment
     *
     * Upload an attachment.  This method uploads an attachment on an object and returns the compact record for the created attachment object. This is possible by either:  - Providing the URL of the external resource being attached, or - Downloading the file content first and then uploading it as any other attachment. Note that it is not possible to attach files from third party services such as Dropbox, Box, Vimeo &amp; Google Drive via the API  The 100MB size limit on attachments in Asana is enforced on this endpoint.  This endpoint expects a multipart/form-data encoded request containing the full contents of the file to be uploaded.  Requests made should follow the HTTP/1.1 specification that line terminators are of the form &#x60;CRLF&#x60; or &#x60;\\r\\n&#x60; outlined [here](http://www.w3.org/Protocols/HTTP/1.1/draft-ietf-http-v11-spec-01#Basic-Rules) in order for the server to reliably and properly handle the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadAttachmentTest() throws ApiException {
        String parent = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        String resourceSubtype = null;
        File _file = null;
        String url = null;
        String name = null;
        Boolean connectToApp = null;
        AttachmentsUploadAttachmentResponse response = api.uploadAttachment(parent)
                .optPretty(optPretty)
                .optFields(optFields)
                .resourceSubtype(resourceSubtype)
                ._file(_file)
                .url(url)
                .name(name)
                .connectToApp(connectToApp)
                .execute();
        // TODO: test validations
    }

}
