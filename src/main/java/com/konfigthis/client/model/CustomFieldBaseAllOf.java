/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec](https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumOption;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CustomFieldBaseAllOf
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CustomFieldBaseAllOf {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENUM_OPTIONS = "enum_options";
  @SerializedName(SERIALIZED_NAME_ENUM_OPTIONS)
  private List<EnumOption> enumOptions = null;

  public static final String SERIALIZED_NAME_PRECISION = "precision";
  @SerializedName(SERIALIZED_NAME_PRECISION)
  private Integer precision;

  /**
   * The format of this custom field.
   */
  @JsonAdapter(FormatEnum.Adapter.class)
 public enum FormatEnum {
    CURRENCY("currency"),
    
    IDENTIFIER("identifier"),
    
    PERCENTAGE("percentage"),
    
    CUSTOM("custom"),
    
    DURATION("duration"),
    
    NONE("none");

    private String value;

    FormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FormatEnum fromValue(String value) {
      for (FormatEnum b : FormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FormatEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FormatEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private FormatEnum format;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currency_code";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_CUSTOM_LABEL = "custom_label";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LABEL)
  private String customLabel;

  /**
   * Only relevant for custom fields with &#x60;custom&#x60; format. This depicts where to place the custom label. This will be null if the &#x60;format&#x60; is not &#x60;custom&#x60;.
   */
  @JsonAdapter(CustomLabelPositionEnum.Adapter.class)
 public enum CustomLabelPositionEnum {
    PREFIX("prefix"),
    
    SUFFIX("suffix"),
    
    NULL("null");

    private String value;

    CustomLabelPositionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CustomLabelPositionEnum fromValue(String value) {
      for (CustomLabelPositionEnum b : CustomLabelPositionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CustomLabelPositionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CustomLabelPositionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CustomLabelPositionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CustomLabelPositionEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CUSTOM_LABEL_POSITION = "custom_label_position";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LABEL_POSITION)
  private CustomLabelPositionEnum customLabelPosition;

  public static final String SERIALIZED_NAME_IS_GLOBAL_TO_WORKSPACE = "is_global_to_workspace";
  @SerializedName(SERIALIZED_NAME_IS_GLOBAL_TO_WORKSPACE)
  private Boolean isGlobalToWorkspace;

  public static final String SERIALIZED_NAME_HAS_NOTIFICATIONS_ENABLED = "has_notifications_enabled";
  @SerializedName(SERIALIZED_NAME_HAS_NOTIFICATIONS_ENABLED)
  private Boolean hasNotificationsEnabled;

  /**
   * *Conditional*. A unique identifier to associate this field with the template source of truth.
   */
  @JsonAdapter(AsanaCreatedFieldEnum.Adapter.class)
 public enum AsanaCreatedFieldEnum {
    A_V_REQUIREMENTS("a_v_requirements"),
    
    ACCOUNT_NAME("account_name"),
    
    ACTIONABLE("actionable"),
    
    ALIGN_SHIPPING_LINK("align_shipping_link"),
    
    ALIGN_STATUS("align_status"),
    
    ALLOTTED_TIME("allotted_time"),
    
    APPOINTMENT("appointment"),
    
    APPROVAL_STAGE("approval_stage"),
    
    APPROVED("approved"),
    
    ARTICLE_SERIES("article_series"),
    
    BOARD_COMMITTEE("board_committee"),
    
    BROWSER("browser"),
    
    CAMPAIGN_AUDIENCE("campaign_audience"),
    
    CAMPAIGN_PROJECT_STATUS("campaign_project_status"),
    
    CAMPAIGN_REGIONS("campaign_regions"),
    
    CHANNEL_PRIMARY("channel_primary"),
    
    CLIENT_TOPIC_TYPE("client_topic_type"),
    
    COMPLETE_BY("complete_by"),
    
    CONTACT("contact"),
    
    CONTACT_EMAIL_ADDRESS("contact_email_address"),
    
    CONTENT_CHANNELS("content_channels"),
    
    CONTENT_CHANNELS_NEEDED("content_channels_needed"),
    
    CONTENT_STAGE("content_stage"),
    
    CONTENT_TYPE("content_type"),
    
    CONTRACT("contract"),
    
    CONTRACT_STATUS("contract_status"),
    
    COST("cost"),
    
    CREATION_STAGE("creation_stage"),
    
    CREATIVE_CHANNEL("creative_channel"),
    
    CREATIVE_NEEDED("creative_needed"),
    
    CREATIVE_NEEDS("creative_needs"),
    
    DATA_SENSITIVITY("data_sensitivity"),
    
    DEAL_SIZE("deal_size"),
    
    DELIVERY_APPT("delivery_appt"),
    
    DELIVERY_APPT_DATE("delivery_appt_date"),
    
    DEPARTMENT("department"),
    
    DEPARTMENT_RESPONSIBLE("department_responsible"),
    
    DESIGN_REQUEST_NEEDED("design_request_needed"),
    
    DESIGN_REQUEST_TYPE("design_request_type"),
    
    DISCUSSION_CATEGORY("discussion_category"),
    
    DO_THIS_TASK("do_this_task"),
    
    EDITORIAL_CONTENT_STATUS("editorial_content_status"),
    
    EDITORIAL_CONTENT_TAG("editorial_content_tag"),
    
    EDITORIAL_CONTENT_TYPE("editorial_content_type"),
    
    EFFORT("effort"),
    
    EFFORT_LEVEL("effort_level"),
    
    EST_COMPLETION_DATE("est_completion_date"),
    
    ESTIMATED_TIME("estimated_time"),
    
    ESTIMATED_VALUE("estimated_value"),
    
    EXPECTED_COST("expected_cost"),
    
    EXTERNAL_STEPS_NEEDED("external_steps_needed"),
    
    FAVORITE_IDEA("favorite_idea"),
    
    FEEDBACK_TYPE("feedback_type"),
    
    FINANCIAL("financial"),
    
    FUNDING_AMOUNT("funding_amount"),
    
    GRANT_APPLICATION_PROCESS("grant_application_process"),
    
    HIRING_CANDIDATE_STATUS("hiring_candidate_status"),
    
    IDEA_STATUS("idea_status"),
    
    IDS_LINK("ids_link"),
    
    IDS_PATIENT_LINK("ids_patient_link"),
    
    IMPLEMENTATION_STAGE("implementation_stage"),
    
    INSURANCE("insurance"),
    
    INTERVIEW_AREA("interview_area"),
    
    INTERVIEW_QUESTION_SCORE("interview_question_score"),
    
    ITERO_SCAN_LINK("itero_scan_link"),
    
    JOB_S_APPLIED_TO("job_s_applied_to"),
    
    LAB("lab"),
    
    LAUNCH_STATUS("launch_status"),
    
    LEAD_STATUS("lead_status"),
    
    LOCALIZATION_LANGUAGE("localization_language"),
    
    LOCALIZATION_MARKET_TEAM("localization_market_team"),
    
    LOCALIZATION_STATUS("localization_status"),
    
    MEETING_MINUTES("meeting_minutes"),
    
    MEETING_NEEDED("meeting_needed"),
    
    MINUTES("minutes"),
    
    MRR("mrr"),
    
    MUST_LOCALIZE("must_localize"),
    
    NAME_OF_FOUNDATION("name_of_foundation"),
    
    NEED_TO_FOLLOW_UP("need_to_follow_up"),
    
    NEXT_APPOINTMENT("next_appointment"),
    
    NEXT_STEPS_SALES("next_steps_sales"),
    
    NUM_PEOPLE("num_people"),
    
    NUMBER_OF_USER_REPORTS("number_of_user_reports"),
    
    OFFICE_LOCATION("office_location"),
    
    ONBOARDING_ACTIVITY("onboarding_activity"),
    
    OWNER("owner"),
    
    PARTICIPANTS_NEEDED("participants_needed"),
    
    PATIENT_DATE_OF_BIRTH("patient_date_of_birth"),
    
    PATIENT_EMAIL("patient_email"),
    
    PATIENT_PHONE("patient_phone"),
    
    PATIENT_STATUS("patient_status"),
    
    PHONE_NUMBER("phone_number"),
    
    PLANNING_CATEGORY("planning_category"),
    
    POINT_OF_CONTACT("point_of_contact"),
    
    POSITION("position"),
    
    POST_FORMAT("post_format"),
    
    PRESCRIPTION("prescription"),
    
    PRIORITY("priority"),
    
    PRIORITY_LEVEL("priority_level"),
    
    PRODUCT("product"),
    
    PRODUCT_STAGE("product_stage"),
    
    PROGRESS("progress"),
    
    PROJECT_SIZE("project_size"),
    
    PROJECT_STATUS("project_status"),
    
    PROPOSED_BUDGET("proposed_budget"),
    
    PUBLISH_STATUS("publish_status"),
    
    REASON_FOR_SCAN("reason_for_scan"),
    
    REFERRAL("referral"),
    
    REQUEST_TYPE("request_type"),
    
    RESEARCH_STATUS("research_status"),
    
    RESPONSIBLE_DEPARTMENT("responsible_department"),
    
    RESPONSIBLE_TEAM("responsible_team"),
    
    RISK_ASSESSMENT_STATUS("risk_assessment_status"),
    
    ROOM_NAME("room_name"),
    
    SALES_COUNTERPART("sales_counterpart"),
    
    SENTIMENT("sentiment"),
    
    SHIPPING_LINK("shipping_link"),
    
    SOCIAL_CHANNELS("social_channels"),
    
    STAGE("stage"),
    
    STATUS("status"),
    
    STATUS_DESIGN("status_design"),
    
    STATUS_OF_INITIATIVE("status_of_initiative"),
    
    SYSTEM_SETUP("system_setup"),
    
    TASK_PROGRESS("task_progress"),
    
    TEAM("team"),
    
    TEAM_MARKETING("team_marketing"),
    
    TEAM_RESPONSIBLE("team_responsible"),
    
    TIME_IT_TAKES_TO_COMPLETE_TASKS("time_it_takes_to_complete_tasks"),
    
    TIMEFRAME("timeframe"),
    
    TREATMENT_TYPE("treatment_type"),
    
    TYPE_WORK_REQUESTS_IT("type_work_requests_it"),
    
    USE_AGENCY("use_agency"),
    
    USER_NAME("user_name"),
    
    VENDOR_CATEGORY("vendor_category"),
    
    VENDOR_TYPE("vendor_type"),
    
    WORD_COUNT("word_count"),
    
    NULL("null");

    private String value;

    AsanaCreatedFieldEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AsanaCreatedFieldEnum fromValue(String value) {
      for (AsanaCreatedFieldEnum b : AsanaCreatedFieldEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AsanaCreatedFieldEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AsanaCreatedFieldEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AsanaCreatedFieldEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AsanaCreatedFieldEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ASANA_CREATED_FIELD = "asana_created_field";
  @SerializedName(SERIALIZED_NAME_ASANA_CREATED_FIELD)
  private AsanaCreatedFieldEnum asanaCreatedField;

  public CustomFieldBaseAllOf() {
  }

  
  public CustomFieldBaseAllOf(
     Boolean isGlobalToWorkspace, 
     AsanaCreatedFieldEnum asanaCreatedField
  ) {
    this();
    this.isGlobalToWorkspace = isGlobalToWorkspace;
    this.asanaCreatedField = asanaCreatedField;
  }

  public CustomFieldBaseAllOf description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * [Opt In](https://raw.githubusercontent.com). The description of the custom field.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Development team priority", value = "[Opt In](https://raw.githubusercontent.com). The description of the custom field.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public CustomFieldBaseAllOf enumOptions(List<EnumOption> enumOptions) {
    
    
    
    
    this.enumOptions = enumOptions;
    return this;
  }

  public CustomFieldBaseAllOf addEnumOptionsItem(EnumOption enumOptionsItem) {
    if (this.enumOptions == null) {
      this.enumOptions = new ArrayList<>();
    }
    this.enumOptions.add(enumOptionsItem);
    return this;
  }

   /**
   * *Conditional*. Only relevant for custom fields of type &#x60;enum&#x60;. This array specifies the possible values which an &#x60;enum&#x60; custom field can adopt. To modify the enum options, refer to [working with enum options](https://raw.githubusercontent.com).
   * @return enumOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "*Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](https://raw.githubusercontent.com).")

  public List<EnumOption> getEnumOptions() {
    return enumOptions;
  }


  public void setEnumOptions(List<EnumOption> enumOptions) {
    
    
    
    this.enumOptions = enumOptions;
  }


  public CustomFieldBaseAllOf precision(Integer precision) {
    
    
    
    
    this.precision = precision;
    return this;
  }

   /**
   * Only relevant for custom fields of type ‘Number’. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive. For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%. The identifier format will always have a precision of 0.
   * @return precision
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "Only relevant for custom fields of type ‘Number’. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive. For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%. The identifier format will always have a precision of 0.")

  public Integer getPrecision() {
    return precision;
  }


  public void setPrecision(Integer precision) {
    
    
    
    this.precision = precision;
  }


  public CustomFieldBaseAllOf format(FormatEnum format) {
    
    
    
    
    this.format = format;
    return this;
  }

   /**
   * The format of this custom field.
   * @return format
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CUSTOM", value = "The format of this custom field.")

  public FormatEnum getFormat() {
    return format;
  }


  public void setFormat(FormatEnum format) {
    
    
    
    this.format = format;
  }


  public CustomFieldBaseAllOf currencyCode(String currencyCode) {
    
    
    
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * ISO 4217 currency code to format this custom field. This will be null if the &#x60;format&#x60; is not &#x60;currency&#x60;.
   * @return currencyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "EUR", value = "ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.")

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    
    
    
    this.currencyCode = currencyCode;
  }


  public CustomFieldBaseAllOf customLabel(String customLabel) {
    
    
    
    
    this.customLabel = customLabel;
    return this;
  }

   /**
   * This is the string that appears next to the custom field value. This will be null if the &#x60;format&#x60; is not &#x60;custom&#x60;.
   * @return customLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "gold pieces", value = "This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.")

  public String getCustomLabel() {
    return customLabel;
  }


  public void setCustomLabel(String customLabel) {
    
    
    
    this.customLabel = customLabel;
  }


  public CustomFieldBaseAllOf customLabelPosition(CustomLabelPositionEnum customLabelPosition) {
    
    
    
    
    this.customLabelPosition = customLabelPosition;
    return this;
  }

   /**
   * Only relevant for custom fields with &#x60;custom&#x60; format. This depicts where to place the custom label. This will be null if the &#x60;format&#x60; is not &#x60;custom&#x60;.
   * @return customLabelPosition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SUFFIX", value = "Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.")

  public CustomLabelPositionEnum getCustomLabelPosition() {
    return customLabelPosition;
  }


  public void setCustomLabelPosition(CustomLabelPositionEnum customLabelPosition) {
    
    
    
    this.customLabelPosition = customLabelPosition;
  }


   /**
   * This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.
   * @return isGlobalToWorkspace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.")

  public Boolean getIsGlobalToWorkspace() {
    return isGlobalToWorkspace;
  }




  public CustomFieldBaseAllOf hasNotificationsEnabled(Boolean hasNotificationsEnabled) {
    
    
    
    
    this.hasNotificationsEnabled = hasNotificationsEnabled;
    return this;
  }

   /**
   * *Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.
   * @return hasNotificationsEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "*Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.")

  public Boolean getHasNotificationsEnabled() {
    return hasNotificationsEnabled;
  }


  public void setHasNotificationsEnabled(Boolean hasNotificationsEnabled) {
    
    
    
    this.hasNotificationsEnabled = hasNotificationsEnabled;
  }


   /**
   * *Conditional*. A unique identifier to associate this field with the template source of truth.
   * @return asanaCreatedField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "PRIORITY", value = "*Conditional*. A unique identifier to associate this field with the template source of truth.")

  public AsanaCreatedFieldEnum getAsanaCreatedField() {
    return asanaCreatedField;
  }



  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CustomFieldBaseAllOf instance itself
   */
  public CustomFieldBaseAllOf putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomFieldBaseAllOf customFieldBaseAllOf = (CustomFieldBaseAllOf) o;
    return Objects.equals(this.description, customFieldBaseAllOf.description) &&
        Objects.equals(this.enumOptions, customFieldBaseAllOf.enumOptions) &&
        Objects.equals(this.precision, customFieldBaseAllOf.precision) &&
        Objects.equals(this.format, customFieldBaseAllOf.format) &&
        Objects.equals(this.currencyCode, customFieldBaseAllOf.currencyCode) &&
        Objects.equals(this.customLabel, customFieldBaseAllOf.customLabel) &&
        Objects.equals(this.customLabelPosition, customFieldBaseAllOf.customLabelPosition) &&
        Objects.equals(this.isGlobalToWorkspace, customFieldBaseAllOf.isGlobalToWorkspace) &&
        Objects.equals(this.hasNotificationsEnabled, customFieldBaseAllOf.hasNotificationsEnabled) &&
        Objects.equals(this.asanaCreatedField, customFieldBaseAllOf.asanaCreatedField)&&
        Objects.equals(this.additionalProperties, customFieldBaseAllOf.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, enumOptions, precision, format, currencyCode, customLabel, customLabelPosition, isGlobalToWorkspace, hasNotificationsEnabled, asanaCreatedField, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomFieldBaseAllOf {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enumOptions: ").append(toIndentedString(enumOptions)).append("\n");
    sb.append("    precision: ").append(toIndentedString(precision)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    customLabel: ").append(toIndentedString(customLabel)).append("\n");
    sb.append("    customLabelPosition: ").append(toIndentedString(customLabelPosition)).append("\n");
    sb.append("    isGlobalToWorkspace: ").append(toIndentedString(isGlobalToWorkspace)).append("\n");
    sb.append("    hasNotificationsEnabled: ").append(toIndentedString(hasNotificationsEnabled)).append("\n");
    sb.append("    asanaCreatedField: ").append(toIndentedString(asanaCreatedField)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("enum_options");
    openapiFields.add("precision");
    openapiFields.add("format");
    openapiFields.add("currency_code");
    openapiFields.add("custom_label");
    openapiFields.add("custom_label_position");
    openapiFields.add("is_global_to_workspace");
    openapiFields.add("has_notifications_enabled");
    openapiFields.add("asana_created_field");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomFieldBaseAllOf
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CustomFieldBaseAllOf.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomFieldBaseAllOf is not found in the empty JSON string", CustomFieldBaseAllOf.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (jsonObj.get("enum_options") != null && !jsonObj.get("enum_options").isJsonNull()) {
        JsonArray jsonArrayenumOptions = jsonObj.getAsJsonArray("enum_options");
        if (jsonArrayenumOptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("enum_options").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `enum_options` to be an array in the JSON string but got `%s`", jsonObj.get("enum_options").toString()));
          }

          // validate the optional field `enum_options` (array)
          for (int i = 0; i < jsonArrayenumOptions.size(); i++) {
            EnumOption.validateJsonObject(jsonArrayenumOptions.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("format") != null && !jsonObj.get("format").isJsonNull()) && !jsonObj.get("format").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `format` to be a primitive type in the JSON string but got `%s`", jsonObj.get("format").toString()));
      }
      if (!jsonObj.get("currency_code").isJsonNull() && (jsonObj.get("currency_code") != null && !jsonObj.get("currency_code").isJsonNull()) && !jsonObj.get("currency_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency_code").toString()));
      }
      if (!jsonObj.get("custom_label").isJsonNull() && (jsonObj.get("custom_label") != null && !jsonObj.get("custom_label").isJsonNull()) && !jsonObj.get("custom_label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_label").toString()));
      }
      if (!jsonObj.get("custom_label_position").isJsonNull() && (jsonObj.get("custom_label_position") != null && !jsonObj.get("custom_label_position").isJsonNull()) && !jsonObj.get("custom_label_position").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_label_position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_label_position").toString()));
      }
      if (!jsonObj.get("asana_created_field").isJsonNull() && (jsonObj.get("asana_created_field") != null && !jsonObj.get("asana_created_field").isJsonNull()) && !jsonObj.get("asana_created_field").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `asana_created_field` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asana_created_field").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomFieldBaseAllOf.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomFieldBaseAllOf' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomFieldBaseAllOf> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomFieldBaseAllOf.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomFieldBaseAllOf>() {
           @Override
           public void write(JsonWriter out, CustomFieldBaseAllOf value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomFieldBaseAllOf read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CustomFieldBaseAllOf instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomFieldBaseAllOf given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomFieldBaseAllOf
  * @throws IOException if the JSON string is invalid with respect to CustomFieldBaseAllOf
  */
  public static CustomFieldBaseAllOf fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomFieldBaseAllOf.class);
  }

 /**
  * Convert an instance of CustomFieldBaseAllOf to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

