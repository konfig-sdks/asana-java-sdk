/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ProjectStatusBase;
import com.konfigthis.client.model.ProjectStatusesCreateNewStatusUpdateRecordRequest;
import com.konfigthis.client.model.ProjectStatusesCreateNewStatusUpdateRecordResponse;
import com.konfigthis.client.model.ProjectStatusesDeleteSpecificStatusUpdateResponse;
import com.konfigthis.client.model.ProjectStatusesGetProjectUpdatesResponse;
import com.konfigthis.client.model.ProjectStatusesGetStatusUpdateRecordResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectStatusesApi
 */
@Disabled
public class ProjectStatusesApiTest {

    private static ProjectStatusesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ProjectStatusesApi(apiClient);
    }

    /**
     * Create a project status
     *
     * *Deprecated: new integrations should prefer the &#x60;/status_updates&#x60; route.*  Creates a new status update on the project.  Returns the full record of the newly created project status update.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewStatusUpdateRecordTest() throws ApiException {
        String projectGid = null;
        ProjectStatusBase data = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        ProjectStatusesCreateNewStatusUpdateRecordResponse response = api.createNewStatusUpdateRecord(projectGid)
                .data(data)
                .optPretty(optPretty)
                .optFields(optFields)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a project status
     *
     * *Deprecated: new integrations should prefer the &#x60;/status_updates/{status_gid}&#x60; route.*  Deletes a specific, existing project status update.  Returns an empty data record.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSpecificStatusUpdateTest() throws ApiException {
        String projectStatusGid = null;
        Boolean optPretty = null;
        ProjectStatusesDeleteSpecificStatusUpdateResponse response = api.deleteSpecificStatusUpdate(projectStatusGid)
                .optPretty(optPretty)
                .execute();
        // TODO: test validations
    }

    /**
     * Get statuses from a project
     *
     * *Deprecated: new integrations should prefer the &#x60;/status_updates&#x60; route.*  Returns the compact project status update records for all updates on the project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectUpdatesTest() throws ApiException {
        String projectGid = null;
        Boolean optPretty = null;
        Integer limit = null;
        String offset = null;
        List<String> optFields = null;
        ProjectStatusesGetProjectUpdatesResponse response = api.getProjectUpdates(projectGid)
                .optPretty(optPretty)
                .limit(limit)
                .offset(offset)
                .optFields(optFields)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a project status
     *
     * *Deprecated: new integrations should prefer the &#x60;/status_updates/{status_gid}&#x60; route.*  Returns the complete record for a single status update.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStatusUpdateRecordTest() throws ApiException {
        String projectStatusGid = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        ProjectStatusesGetStatusUpdateRecordResponse response = api.getStatusUpdateRecord(projectStatusGid)
                .optPretty(optPretty)
                .optFields(optFields)
                .execute();
        // TODO: test validations
    }

}
