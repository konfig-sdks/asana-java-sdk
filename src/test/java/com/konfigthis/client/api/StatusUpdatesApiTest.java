/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec](https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import java.time.OffsetDateTime;
import com.konfigthis.client.model.StatusUpdateRequest;
import com.konfigthis.client.model.StatusUpdatesCreateNewStatusUpdateRecordRequest;
import com.konfigthis.client.model.StatusUpdatesCreateNewStatusUpdateRecordResponse;
import com.konfigthis.client.model.StatusUpdatesDeleteSpecificStatusUpdateResponse;
import com.konfigthis.client.model.StatusUpdatesGetCompactRecordsResponse;
import com.konfigthis.client.model.StatusUpdatesGetRecordByIdResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StatusUpdatesApi
 */
@Disabled
public class StatusUpdatesApiTest {

    private static StatusUpdatesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new StatusUpdatesApi(apiClient);
    }

    /**
     * Create a status update
     *
     * Creates a new status update on an object. Returns the full record of the newly created status update.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewStatusUpdateRecordTest() throws ApiException {
        StatusUpdateRequest data = null;
        Boolean optPretty = null;
        Integer limit = null;
        String offset = null;
        List<String> optFields = null;
        StatusUpdatesCreateNewStatusUpdateRecordResponse response = api.createNewStatusUpdateRecord()
                .data(data)
                .optPretty(optPretty)
                .limit(limit)
                .offset(offset)
                .optFields(optFields)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a status update
     *
     * Deletes a specific, existing status update.  Returns an empty data record.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSpecificStatusUpdateTest() throws ApiException {
        String statusUpdateGid = null;
        Boolean optPretty = null;
        StatusUpdatesDeleteSpecificStatusUpdateResponse response = api.deleteSpecificStatusUpdate(statusUpdateGid)
                .optPretty(optPretty)
                .execute();
        // TODO: test validations
    }

    /**
     * Get status updates from an object
     *
     * Returns the compact status update records for all updates on the object.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCompactRecordsTest() throws ApiException {
        String parent = null;
        Boolean optPretty = null;
        Integer limit = null;
        String offset = null;
        OffsetDateTime createdSince = null;
        List<String> optFields = null;
        StatusUpdatesGetCompactRecordsResponse response = api.getCompactRecords(parent)
                .optPretty(optPretty)
                .limit(limit)
                .offset(offset)
                .createdSince(createdSince)
                .optFields(optFields)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a status update
     *
     * Returns the complete record for a single status update.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRecordByIdTest() throws ApiException {
        String statusUpdateGid = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        StatusUpdatesGetRecordByIdResponse response = api.getRecordById(statusUpdateGid)
                .optPretty(optPretty)
                .optFields(optFields)
                .execute();
        // TODO: test validations
    }

}
