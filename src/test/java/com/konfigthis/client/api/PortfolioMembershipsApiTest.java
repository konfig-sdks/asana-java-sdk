/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec](https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.PortfolioMembershipsGetCompactResponse;
import com.konfigthis.client.model.PortfolioMembershipsGetCompleteRecordResponse;
import com.konfigthis.client.model.PortfolioMembershipsListMultipleMembershipsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PortfolioMembershipsApi
 */
@Disabled
public class PortfolioMembershipsApiTest {

    private static PortfolioMembershipsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new PortfolioMembershipsApi(apiClient);
    }

    /**
     * Get memberships from a portfolio
     *
     * Returns the compact portfolio membership records for the portfolio.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCompactTest() throws ApiException {
        String portfolioGid = null;
        String user = null;
        Boolean optPretty = null;
        Integer limit = null;
        String offset = null;
        List<String> optFields = null;
        PortfolioMembershipsGetCompactResponse response = api.getCompact(portfolioGid)
                .user(user)
                .optPretty(optPretty)
                .limit(limit)
                .offset(offset)
                .optFields(optFields)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a portfolio membership
     *
     * Returns the complete portfolio record for a single portfolio membership.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCompleteRecordTest() throws ApiException {
        String portfolioMembershipGid = null;
        Boolean optPretty = null;
        List<String> optFields = null;
        PortfolioMembershipsGetCompleteRecordResponse response = api.getCompleteRecord(portfolioMembershipGid)
                .optPretty(optPretty)
                .optFields(optFields)
                .execute();
        // TODO: test validations
    }

    /**
     * Get multiple portfolio memberships
     *
     * Returns a list of portfolio memberships in compact representation. You must specify &#x60;portfolio&#x60;, &#x60;portfolio&#x60; and &#x60;user&#x60;, or &#x60;workspace&#x60; and &#x60;user&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMultipleMembershipsTest() throws ApiException {
        String portfolio = null;
        String workspace = null;
        String user = null;
        Boolean optPretty = null;
        Integer limit = null;
        String offset = null;
        List<String> optFields = null;
        PortfolioMembershipsListMultipleMembershipsResponse response = api.listMultipleMemberships()
                .portfolio(portfolio)
                .workspace(workspace)
                .user(user)
                .optPretty(optPretty)
                .limit(limit)
                .offset(offset)
                .optFields(optFields)
                .execute();
        // TODO: test validations
    }

}
