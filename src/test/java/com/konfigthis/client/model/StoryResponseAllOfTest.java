/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec](https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CustomFieldCompact;
import com.konfigthis.client.model.EnumOption;
import com.konfigthis.client.model.Like;
import com.konfigthis.client.model.Preview;
import com.konfigthis.client.model.ProjectCompact;
import com.konfigthis.client.model.SectionCompact;
import com.konfigthis.client.model.StoryCompact;
import com.konfigthis.client.model.StoryResponseDates;
import com.konfigthis.client.model.TagCompact;
import com.konfigthis.client.model.TaskCompact;
import com.konfigthis.client.model.UserCompact;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for StoryResponseAllOf
 */
public class StoryResponseAllOfTest {
    private final StoryResponseAllOf model = new StoryResponseAllOf();

    /**
     * Model tests for StoryResponseAllOf
     */
    @Test
    public void testStoryResponseAllOf() {
        // TODO: test StoryResponseAllOf
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'isEditable'
     */
    @Test
    public void isEditableTest() {
        // TODO: test isEditable
    }

    /**
     * Test the property 'isEdited'
     */
    @Test
    public void isEditedTest() {
        // TODO: test isEdited
    }

    /**
     * Test the property 'hearted'
     */
    @Test
    public void heartedTest() {
        // TODO: test hearted
    }

    /**
     * Test the property 'hearts'
     */
    @Test
    public void heartsTest() {
        // TODO: test hearts
    }

    /**
     * Test the property 'numHearts'
     */
    @Test
    public void numHeartsTest() {
        // TODO: test numHearts
    }

    /**
     * Test the property 'liked'
     */
    @Test
    public void likedTest() {
        // TODO: test liked
    }

    /**
     * Test the property 'likes'
     */
    @Test
    public void likesTest() {
        // TODO: test likes
    }

    /**
     * Test the property 'numLikes'
     */
    @Test
    public void numLikesTest() {
        // TODO: test numLikes
    }

    /**
     * Test the property 'previews'
     */
    @Test
    public void previewsTest() {
        // TODO: test previews
    }

    /**
     * Test the property 'oldName'
     */
    @Test
    public void oldNameTest() {
        // TODO: test oldName
    }

    /**
     * Test the property 'newName'
     */
    @Test
    public void newNameTest() {
        // TODO: test newName
    }

    /**
     * Test the property 'oldDates'
     */
    @Test
    public void oldDatesTest() {
        // TODO: test oldDates
    }

    /**
     * Test the property 'newDates'
     */
    @Test
    public void newDatesTest() {
        // TODO: test newDates
    }

    /**
     * Test the property 'oldResourceSubtype'
     */
    @Test
    public void oldResourceSubtypeTest() {
        // TODO: test oldResourceSubtype
    }

    /**
     * Test the property 'newResourceSubtype'
     */
    @Test
    public void newResourceSubtypeTest() {
        // TODO: test newResourceSubtype
    }

    /**
     * Test the property 'story'
     */
    @Test
    public void storyTest() {
        // TODO: test story
    }

    /**
     * Test the property 'assignee'
     */
    @Test
    public void assigneeTest() {
        // TODO: test assignee
    }

    /**
     * Test the property 'follower'
     */
    @Test
    public void followerTest() {
        // TODO: test follower
    }

    /**
     * Test the property 'oldSection'
     */
    @Test
    public void oldSectionTest() {
        // TODO: test oldSection
    }

    /**
     * Test the property 'newSection'
     */
    @Test
    public void newSectionTest() {
        // TODO: test newSection
    }

    /**
     * Test the property 'task'
     */
    @Test
    public void taskTest() {
        // TODO: test task
    }

    /**
     * Test the property 'project'
     */
    @Test
    public void projectTest() {
        // TODO: test project
    }

    /**
     * Test the property 'tag'
     */
    @Test
    public void tagTest() {
        // TODO: test tag
    }

    /**
     * Test the property 'customField'
     */
    @Test
    public void customFieldTest() {
        // TODO: test customField
    }

    /**
     * Test the property 'oldTextValue'
     */
    @Test
    public void oldTextValueTest() {
        // TODO: test oldTextValue
    }

    /**
     * Test the property 'newTextValue'
     */
    @Test
    public void newTextValueTest() {
        // TODO: test newTextValue
    }

    /**
     * Test the property 'oldNumberValue'
     */
    @Test
    public void oldNumberValueTest() {
        // TODO: test oldNumberValue
    }

    /**
     * Test the property 'newNumberValue'
     */
    @Test
    public void newNumberValueTest() {
        // TODO: test newNumberValue
    }

    /**
     * Test the property 'oldEnumValue'
     */
    @Test
    public void oldEnumValueTest() {
        // TODO: test oldEnumValue
    }

    /**
     * Test the property 'newEnumValue'
     */
    @Test
    public void newEnumValueTest() {
        // TODO: test newEnumValue
    }

    /**
     * Test the property 'oldDateValue'
     */
    @Test
    public void oldDateValueTest() {
        // TODO: test oldDateValue
    }

    /**
     * Test the property 'newDateValue'
     */
    @Test
    public void newDateValueTest() {
        // TODO: test newDateValue
    }

    /**
     * Test the property 'oldPeopleValue'
     */
    @Test
    public void oldPeopleValueTest() {
        // TODO: test oldPeopleValue
    }

    /**
     * Test the property 'newPeopleValue'
     */
    @Test
    public void newPeopleValueTest() {
        // TODO: test newPeopleValue
    }

    /**
     * Test the property 'oldMultiEnumValues'
     */
    @Test
    public void oldMultiEnumValuesTest() {
        // TODO: test oldMultiEnumValues
    }

    /**
     * Test the property 'newMultiEnumValues'
     */
    @Test
    public void newMultiEnumValuesTest() {
        // TODO: test newMultiEnumValues
    }

    /**
     * Test the property 'newApprovalStatus'
     */
    @Test
    public void newApprovalStatusTest() {
        // TODO: test newApprovalStatus
    }

    /**
     * Test the property 'oldApprovalStatus'
     */
    @Test
    public void oldApprovalStatusTest() {
        // TODO: test oldApprovalStatus
    }

    /**
     * Test the property 'duplicateOf'
     */
    @Test
    public void duplicateOfTest() {
        // TODO: test duplicateOf
    }

    /**
     * Test the property 'duplicatedFrom'
     */
    @Test
    public void duplicatedFromTest() {
        // TODO: test duplicatedFrom
    }

    /**
     * Test the property 'dependency'
     */
    @Test
    public void dependencyTest() {
        // TODO: test dependency
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'target'
     */
    @Test
    public void targetTest() {
        // TODO: test target
    }

}
